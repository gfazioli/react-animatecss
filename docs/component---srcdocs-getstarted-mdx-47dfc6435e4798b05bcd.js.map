{"version":3,"sources":["webpack:///../srcdocs/getstarted.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","id","__position","__code","__scope","CodeSandbox","Playground","Bounce","Example","BounceAnimation","animate","as","block","isMDXComponent"],"mappings":"yhBAUO,IAAMA,EAAe,Q,wMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uBADQ,SAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,mDADQ,UAItB,iBAAQ,CACN,GAAM,gBADR,gBAGA,2CAA0B,sBAAQA,WAAW,KAAnB,QAC1B,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uCAIL,2BAAU,sBAAQA,WAAW,KAAnB,SACV,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0CAIL,iBAAQ,CACN,GAAM,WADR,WAGA,2CAA0B,mBAAGA,WAAW,KAAQ,CAC5C,KAAQ,wCADc,uCAA1B,YAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iMAML,iBAAQ,CACN,GAAM,kBADR,kBAGA,wCAAuB,0BAAYA,WAAW,KAAvB,kBAAvB,gFAAkK,0BAAYA,WAAW,KAAvB,WAAlK,SACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,YAAC,IAAD,CAAaC,GAAG,aAAaF,QAAQ,gBACrC,iBAAQ,CACN,GAAM,qBADR,qBAGA,iFAAgE,0BAAYC,WAAW,KAAvB,QAAhE,SAA0H,0BAAYA,WAAW,KAAvB,yBAA1H,wDAAoP,0BAAYA,WAAW,KAAvB,MAApP,cACA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,qGAAwGC,QAAS,CAClJN,QACAH,kBACAU,gBACAC,eACAC,WACAC,YACAC,qBACCV,QAAQ,cACb,2CACE,YAAC,IAAD,CAAQW,SAAS,EAAMC,GAAG,MAAMZ,QAAQ,UAAxC,gBAKA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,oGAAuGC,QAAS,CACjJN,QACAH,kBACAU,gBACAC,eACAC,WACAC,YACAC,qBACCV,QAAQ,cACb,2CACE,YAAC,IAAD,CAAQW,SAAS,EAAMC,GAAG,KAAKZ,QAAQ,UAAvC,gBAKA,iBAAQ,CACN,GAAM,iBADR,iBAGA,kDAAiC,0BAAYC,WAAW,KAAvB,wBAAjC,0DAA4J,0BAAYA,WAAW,KAAvB,SAA5J,KACA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,kGAAmGC,QAAS,CAC7IN,QACAH,kBACAU,gBACAC,eACAC,WACAC,YACAC,qBACCV,QAAQ,cACb,2CACE,YAAC,IAAD,CAAQW,SAAS,EAAME,OAAK,EAACb,QAAQ,UAArC,gBAKA,iDAAgC,0BAAYC,WAAW,KAAvB,QAAhC,QAAyF,0BAAYA,WAAW,KAAvB,iBAAzF,4CACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,0FAIL,uCACA,YAAC,IAAD,CAAiBD,QAAQ,oBACzB,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAASA,QAAQ,YACjB,iBAAQ,CACN,GAAM,WADR,WAGA,iDAAgC,mBAAGC,WAAW,KAAQ,CAClD,KAAQ,2CADoB,iB,+LAOpCJ,EAAWiB,gBAAiB","file":"component---srcdocs-getstarted-mdx-47dfc6435e4798b05bcd.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/giovambattistafazioli/Lavori/Github/react-animatecss/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeSandbox } from \"./theme/theme\";\nimport { Playground } from 'docz';\nimport Bounce from '../src/components/Bounce';\nimport Example, { BounceAnimation } from \"./components/Bounce/example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"get-started\"\n    }}>{`Get Started`}</h1>\n    <h2 {...{\n      \"id\": \"requirements\"\n    }}>{`Requirements`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://nodejs.org\"\n        }}>{`node`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://yarnpkg.com/en/docs/install#mac-stable\"\n        }}>{`yarn`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`You can use either `}<strong parentName=\"p\">{`npm`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i @gfazioli/react-animatecss\n`}</code></pre>\n    <p>{`or `}<strong parentName=\"p\">{`yarn`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add @gfazioli/react-animatecss\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"combine\"\n    }}>{`Combine`}</h2>\n    <p>{`Of course, you can `}<a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/rmyqwq2wmo\"\n      }}>{`combine different animation effects`}</a>{` as well`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<Zoom animate={both} onAnimationEnd={() => setBoth(false)}>\n  <RubberBand animate={both} onAnimationEnd={() => setBoth(false)}>\n    <h1>RubberBand + Zoom</h1>\n  </RubberBand>\n</Zoom>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"onanimationend\"\n    }}>{`onAnimationEnd`}</h2>\n    <p>{`You may use the `}<inlineCode parentName=\"p\">{`onAnimationEnd`}</inlineCode>{` event to detect when an animation is completed. This is useful to reset the `}<inlineCode parentName=\"p\">{`animate`}</inlineCode>{` prop`}</p>\n    <h2 {...{\n      \"id\": \"mix-your-animation\"\n    }}>{`Mix your animation`}</h2>\n    <CodeSandbox id=\"rmyqwq2wmo\" mdxType=\"CodeSandbox\" />\n    <h2 {...{\n      \"id\": \"agnostic-html-tag\"\n    }}>{`Agnostic HTML tag`}</h2>\n    <p>{`Currently, the default container for all animations is a `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`display: inline-block`}</inlineCode>{`. You may easly override this behaviour by using the `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` property:`}</p>\n    <Playground __position={1} __code={'<h1>\\n  Say Hello to React\\n  <Bounce animate={true} as=\\\"div\\\">\\n    AnimateCSS\\n  </Bounce>\\n</h1>'} __scope={{\n      props,\n      DefaultLayout,\n      CodeSandbox,\n      Playground,\n      Bounce,\n      Example,\n      BounceAnimation\n    }} mdxType=\"Playground\">\n  <h1>Say Hello to React\n    <Bounce animate={true} as=\"div\" mdxType=\"Bounce\">\n      AnimateCSS\n    </Bounce>  \n  </h1>\n    </Playground>\n    <Playground __position={2} __code={'<h1>\\n  Say Hello to React\\n  <Bounce animate={true} as=\\\"h6\\\">\\n    AnimateCSS\\n  </Bounce>\\n</h1>'} __scope={{\n      props,\n      DefaultLayout,\n      CodeSandbox,\n      Playground,\n      Bounce,\n      Example,\n      BounceAnimation\n    }} mdxType=\"Playground\">\n  <h1>Say Hello to React\n    <Bounce animate={true} as=\"h6\" mdxType=\"Bounce\">\n      AnimateCSS\n    </Bounce>  \n  </h1>\n    </Playground>\n    <h2 {...{\n      \"id\": \"display-block\"\n    }}>{`Display block`}</h2>\n    <p>{`Now, you can override the `}<inlineCode parentName=\"p\">{`display: inline-bock`}</inlineCode>{` in two ways. The first on is by using the new propery `}<inlineCode parentName=\"p\">{`block`}</inlineCode>{` `}</p>\n    <Playground __position={3} __code={'<h1>\\n  Say Hello to React\\n  <Bounce animate={true} block>\\n    AnimateCSS\\n  </Bounce>\\n</h1>'} __scope={{\n      props,\n      DefaultLayout,\n      CodeSandbox,\n      Playground,\n      Bounce,\n      Example,\n      BounceAnimation\n    }} mdxType=\"Playground\">\n  <h1>Say Hello to React\n    <Bounce animate={true} block mdxType=\"Bounce\">\n      AnimateCSS\n    </Bounce>  \n  </h1>\n    </Playground>\n    <p>{`The above will display a `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{` in  `}<inlineCode parentName=\"p\">{`display: bock`}</inlineCode>{`. You may also use the styled-component:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const BounceAnimation = styled(Bounce).attrs({ as: \"div\" })\\`\n  display: block;\n\\`;\n`}</code></pre>\n    <p>{`See demo below`}</p>\n    <BounceAnimation mdxType=\"BounceAnimation\" />  \n    <h2 {...{\n      \"id\": \"complete-example\"\n    }}>{`Complete example`}</h2>\n    <Example mdxType=\"Example\" />\n    <h2 {...{\n      \"id\": \"credits\"\n    }}>{`Credits`}</h2>\n    <p>{`This package is based of `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/daneden/animate.css\"\n      }}>{`Animate.css`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}