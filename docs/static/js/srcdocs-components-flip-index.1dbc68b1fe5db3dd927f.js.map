{"version":3,"sources":["webpack:///./src/components/Flip/index.tsx","webpack:///./srcdocs/components/Flip/index.mdx"],"names":["FlipStyled","styled","AnimateCSS","_templateObject","p","animate","uc","mode","axes","Flip","props","children","others","_objectWithoutProperties","react_default","a","createElement","displayName","__docgenInfo","description","defaultValue","value","name","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","Flip_objectWithoutProperties","dist","id","index_m","of","__position","__code","__scope","components_Flip"],"mappings":"ghHAmBA,IAAMA,EAAaC,YAAOC,IAAPD,CAAHE,IAiHI,SAAAC,GAAC,OAAIA,EAAEC,QAAU,OAASC,YAAGF,EAAEG,MAAQD,YAAGF,EAAEI,MAAQ,QAEpE,SAAAJ,GAAC,MAAe,QAAXA,EAAEG,KAAiB,6BAA+B,KAIrDE,EAAiC,SAAAC,GAAS,IAEtCC,EAAwBD,EAAxBC,SAAaC,EAFyBC,EAEdH,EAFc,cAI9C,OACEI,EAAAC,EAAAC,cAAChB,EAAeY,EACbD,IAKQF,IACf,IAEIA,EAAKQ,YAAc,OAEnBR,EAAKS,aAAe,CAAEC,YAAe,GAAIF,YAAe,OAAQP,MAAS,CAAEH,KAAQ,CAAEa,aAAgB,CAAEC,MAAO,QAAUF,YAAe,0BAA+BG,KAAQ,OAAQC,UAAY,EAAOC,KAAQ,CAAEF,KAAQ,WAAcd,KAAQ,CAAEY,aAAgB,CAAEC,MAAO,QAAUF,YAAe,8BAAmCG,KAAQ,OAAQC,UAAY,EAAOC,KAAQ,CAAEF,KAAQ,aAEtV,qBAA5BG,0BAEPA,wBAAwB,sCAAwC,CAAEC,WAAYjB,EAAKS,aAAcI,KAAM,OAAQK,KAAM,uCAE7H,MAAOC,6sCCvJcC,cACnB,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,mGAAAC,CAAAC,KAAAH,IACjBC,EAAAG,EAAAD,KAAAE,EAAAL,GAAAM,KAAAH,KAAMtB,KACD0B,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKtB,MAA9B8B,EADDD,EACCC,WAAe9B,EADhB+B,EAAAF,EAAA,gBAGP,OAAOzB,EAAAC,EAAAC,cAAC0B,EAAA,OAAD,CACEpB,KAAK,UAELkB,WAAYA,GACzB1B,EAAAC,EAAAC,cAAC0B,EAAA,OAAD,CAAQpB,KAAK,KAAKkB,WAAYA,EAAY9B,MAAO,CAACiC,GAAK,SAAvD,QACA7B,EAAAC,EAAAC,cAAC0B,EAAA,OAAD,CAAQpB,KAAK,KAAKkB,WAAYA,EAAY9B,MAAO,CAACiC,GAAK,UAAvD,SACA7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAYC,GAAIpC,IAChBK,EAAAC,EAAAC,cAAC0B,EAAA,OAAD,CAAQpB,KAAK,KAAKkB,WAAYA,EAAY9B,MAAO,CAACiC,GAAK,eAAvD,cACA7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAYE,WAAY,EAAGC,OAAQ,2EAA4EC,QAAS,CAACtC,MAAOsB,KAAOA,KAAKtB,MAAQA,EAAMD,SACxJK,EAAAC,EAAAC,cAACiC,EAAD,CAAM5C,SAAS,GACbS,EAAAC,EAAAC,cAAA,6CAGJF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAYE,WAAY,EAAGC,OAAQ,8FAAmGC,QAAS,CAACtC,MAAOsB,KAAOA,KAAKtB,MAAQA,EAAMD,SAC/KK,EAAAC,EAAAC,cAACiC,EAAD,CAAM5C,SAAS,EAAMG,KAAK,IAAID,KAAK,MACjCO,EAAAC,EAAAC,cAAA","file":"static/js/srcdocs-components-flip-index.8f9b4028.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { AnimateCSS, IAnimateCSS, uc } from \"../AnimateCSS\"\n\ninterface Props extends IAnimateCSS {\n  /**\n   * Animate mode \"in\"|\"out\"\n   * \n   * @default none\n   */\n  mode?: string;\n  /**\n   * Animation direction \"x\"|\"y\"\n   * \n   * @default none\n   */\n  axes?: string;\n}\n\nconst FlipStyled = styled(AnimateCSS) <Props>`\n  @keyframes flip {\n    from {\n      transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg);\n      animation-timing-function: ease-out;\n    }\n\n    40% {\n      transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\n        rotate3d(0, 1, 0, -190deg);\n      animation-timing-function: ease-out;\n    }\n\n    50% {\n      transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\n        rotate3d(0, 1, 0, -170deg);\n      animation-timing-function: ease-in;\n    }\n\n    80% {\n      transform: perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0)\n        rotate3d(0, 1, 0, 0deg);\n      animation-timing-function: ease-in;\n    }\n\n    to {\n      transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);\n      animation-timing-function: ease-in;\n    }\n  }\n\n  @keyframes flipInX {\n    from {\n      transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n      animation-timing-function: ease-in;\n      opacity: 0;\n    }\n  \n    40% {\n      transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n      animation-timing-function: ease-in;\n    }\n  \n    60% {\n      transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\n      opacity: 1;\n    }\n  \n    80% {\n      transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\n    }\n  \n    to {\n      transform: perspective(400px);\n    }\n  }\n  @keyframes flipInY {\n    from {\n      transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n      animation-timing-function: ease-in;\n      opacity: 0;\n    }\n  \n    40% {\n      transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\n      animation-timing-function: ease-in;\n    }\n  \n    60% {\n      transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\n      opacity: 1;\n    }\n  \n    80% {\n      transform: perspective(400px) rotate3d(0, 1, 0, -5deg);\n    }\n  \n    to {\n      transform: perspective(400px);\n    }\n  }\n\n  @keyframes flipOutX {\n    from {\n      transform: perspective(400px);\n    }\n  \n    30% {\n      transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n      opacity: 1;\n    }\n  \n    to {\n      transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n      opacity: 0;\n    }\n  }\n  @keyframes flipOutY {\n    from {\n      transform: perspective(400px);\n    }\n  \n    30% {\n      transform: perspective(400px) rotate3d(0, 1, 0, -15deg);\n      opacity: 1;\n    }\n  \n    to {\n      transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n      opacity: 0;\n    }\n  }\n\n  animation-name: ${p => p.animate ? \"flip\" + uc(p.mode) + uc(p.axes) : \"none\"};\n  backface-visibility: visible !important;\n  ${p => p.mode === \"out\" ? \"animation-duration: 0.75s;\" : \"\"}\n\n`;\n\nconst Flip: FunctionComponent<Props> = props => {\n\n  const { children, ...others } = props;\n\n  return (\n    <FlipStyled {...others}>\n      {children}\n    </FlipStyled>\n  );\n}\n\nexport default Flip;\ntry {\n    // @ts-ignore\n    Flip.displayName = \"Flip\";\n    // @ts-ignore\n    Flip.__docgenInfo = { \"description\": \"\", \"displayName\": \"Flip\", \"props\": { \"mode\": { \"defaultValue\": { value: \"none\" }, \"description\": \"Animate mode \\\"in\\\"|\\\"out\\\"\", \"name\": \"mode\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"axes\": { \"defaultValue\": { value: \"none\" }, \"description\": \"Animation direction \\\"x\\\"|\\\"y\\\"\", \"name\": \"axes\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Flip/index.tsx#Flip\"] = { docgenInfo: Flip.__docgenInfo, name: \"Flip\", path: \"src/components/Flip/index.tsx#Flip\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport Flip from '../../../src/components/Flip'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"flip\"}}>{`Flip`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Flip} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"playground\"}}>{`Playground`}</MDXTag>\n<Playground __position={1} __code={'<Flip animate={true}>\\n  <h1>Say Hello to React AnimateCSS</h1>\\n</Flip>'} __scope={{props: this ? this.props : props,Flip}}>\n  <Flip animate={true}>\n    <h1>Say Hello to React AnimateCSS</h1>\n  </Flip>  \n</Playground>\n<Playground __position={2} __code={'<Flip animate={true} axes=\\\"x\\\" mode=\\\"in\\\">\\n  <h1>Say Hello to React AnimateCSS</h1>\\n</Flip>'} __scope={{props: this ? this.props : props,Flip}}>\n  <Flip animate={true} axes=\"x\" mode=\"in\">\n    <h1>Say Hello to React AnimateCSS</h1>\n  </Flip>  \n</Playground>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}